// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Mon Sep 23 13:13:48 2019
// Test bench was made following the example of Vadim Kharchuk
`timescale 1ns/1ps

module lab2_tb;

reg clk_sig;
reg we_sig;
reg arst_sig;
reg [4:0] RA_sig, RB_sig, RW_sig;
reg [31:0] data_sig;
reg [31:0] OUTA_sig, OUTB_sig;


lab2 lab2_tb
(
	.we(we_sig) ,	// input  we_sig
	.arst(arst_sig) ,	// input  arst_sig
	.data(data_sig) ,	// input [31:0] data_sig
	.clk(clk_sig) ,	// input  clk_sig
	.RW(RW_sig) ,	// input [4:0] RW_sig
	.RA(RA_sig) ,	// input [4:0] RA_sig
	.RB(RB_sig) ,	// input [4:0] RB_sig
	.OUTA(OUTA_sig) ,	// output [31:0] OUTA_sig
	.OUTB(OUTB_sig) 	// output [31:0] OUTB_sig
);


initial begin
	we_sig = 1'b0;
	forever #5 we_sig = ~we_sig; 
end


initial begin
	clk_sig = 1'b0;
	forever #1 clk_sig = ~clk_sig;
end


initial begin
	arst_sig = 1'b0;
	#12 arst_sig = 1'b1;
	#40 arst_sig = 1'b0;
	#2 arst_sig = 1'b1;
end


initial begin
	RA_sig = 1'b0;
	RB_sig = 1'b0;
end


initial begin

	for(int i = 0;i < 32; i=i+1) begin
	#3  RW_sig = i;
	#10 data_sig = 32'(i) | 32'hbadb0000;
	RA_sig = 5'(i);
	RB_sig = 5'(i);
	end
end


initial begin 
	#440 $stop();
end


endmodule
